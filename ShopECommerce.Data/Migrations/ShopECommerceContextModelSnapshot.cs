// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopECommerce.Data.Context;

#nullable disable

namespace ShopECommerce.Data.Migrations
{
    [DbContext(typeof(ShopECommerceContext))]
    partial class ShopECommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Price1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5226),
                            Description = "The generated Lorem Ipsum is therefore always free from repetition injected humour, or non-characteristic words etc.",
                            ImageUrl = "/WebT/img/baner-1.png",
                            IsDeleted = false,
                            Price1 = "1",
                            Price2 = "50",
                            Status = true,
                            SubTitle = "in Our Store",
                            Title = "Fresh Exotic Fruits",
                            Url = "#",
                            UrlLabel = "BUY"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Count")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MenuTableId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuTableId");

                    b.HasIndex("ProductId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonCount")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Fruites",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3759),
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Vesitables",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3763),
                            IsDeleted = false,
                            Status = true
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FooterDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMapsApi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5249),
                            FooterDescription = "typesetting, remaining essentially unchanged. It was popularised in the 1960s with the like Aldus PageMaker including of Lorem Ipsum.",
                            FooterTitle = "Why People Like us!",
                            GoogleMapsApi = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d387191.33750346623!2d-73.97968099999999!3d40.6974881!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c24fa5d33f083b%3A0xc80b8f06e177fe62!2sNew%20York%2C%20NY%2C%20USA!5e0!3m2!1sen!2sbd!4v1694259649153!5m2!1sen!2sbd",
                            IsDeleted = false,
                            Location = "1429 Netus Rd, NY 48247",
                            Mail = "Example@gmail.com",
                            Phone = "+0123 4567 8910",
                            SiteName = "Fruitables",
                            SiteTitle = "Fresh products",
                            SiteUrl = "www.fruitables.com",
                            Status = true
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = "20%",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5039),
                            Description = "OFF",
                            ImageUrl = "/WebT/img/featur-1.jpg",
                            IsDeleted = false,
                            Status = true,
                            Title = "Fresh Apples"
                        },
                        new
                        {
                            Id = 2,
                            Amount = "",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5041),
                            Description = "Free delivery",
                            ImageUrl = "/WebT/img/featur-2.jpg",
                            IsDeleted = false,
                            Status = true,
                            Title = "Tasty Fruits"
                        },
                        new
                        {
                            Id = 3,
                            Amount = "30$",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5043),
                            Description = "Discount",
                            ImageUrl = "/WebT/img/featur-3.jpg",
                            IsDeleted = false,
                            Status = true,
                            Title = "Exotic Vegitable"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Fact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Facts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5196),
                            Description = "1963",
                            Icon = "fa fa-users text-secondary",
                            IsDeleted = false,
                            Status = true,
                            Title = "SATISFIED CUSTOMERS"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5198),
                            Description = "99%",
                            Icon = "fa fa-users text-secondary",
                            IsDeleted = false,
                            Status = true,
                            Title = "QUALITY OF SERVICE"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5200),
                            Description = "33",
                            Icon = "fa fa-users text-secondary",
                            IsDeleted = false,
                            Status = true,
                            Title = "QUALITY CERTIFICATES"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5201),
                            Description = "789",
                            Icon = "fa fa-users text-secondary",
                            IsDeleted = false,
                            Status = true,
                            Title = "AVAILABLE PRODUCTS"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Featur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Featurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5170),
                            Description = "Free on order over $300",
                            Icon = "fas fa-car-side fa-3x text-white",
                            IsDeleted = false,
                            Status = true,
                            Title = "Free Shipping"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5173),
                            Description = "100% security payment",
                            Icon = "fas fa-user-shield fa-3x text-white",
                            IsDeleted = false,
                            Status = true,
                            Title = "Security Payment"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5174),
                            Description = "30 day money guarantee",
                            Icon = "fas fa-exchange-alt fa-3x text-white",
                            IsDeleted = false,
                            Status = true,
                            Title = "30 Day Return"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5176),
                            Description = "Support every time fast",
                            Icon = "fa fa-phone-alt fa-3x text-white",
                            IsDeleted = false,
                            Status = true,
                            Title = "24/7 Support"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.MenuTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MenuTables");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MessageSendDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.MoneyCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MoneyCases");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("Date");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5065),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/fruite-item-5.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Grapes",
                            Status = true,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5068),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/fruite-item-2.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Raspberries",
                            Status = true,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5069),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/fruite-item-4.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Apricots",
                            Status = true,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5071),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/fruite-item-3.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Banana",
                            Status = true,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5073),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/fruite-item-1.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Oranges",
                            Status = true,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5076),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/featur-1.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Apple",
                            Status = true,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5077),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/vegetable-item-5.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Patatoes",
                            Status = true,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5078),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/vegetable-item-6.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Persely",
                            Status = true,
                            SubCategoryId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5080),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/vegetable-item-1.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Tomato",
                            Status = true,
                            SubCategoryId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5083),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/featur-3.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Brocoli",
                            Status = true,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5132),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/vegetable-item-4.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Bell Papper",
                            Status = true,
                            SubCategoryId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5134),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod te incididunt",
                            ImageUrl = "/WebT/img/featur-2.jpg",
                            IsDeleted = false,
                            Price = 4.95m,
                            ProductName = "Native Strawberry",
                            Status = true,
                            SubCategoryId = 12
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3673),
                            IsDeleted = false,
                            Name = "Admin",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3716),
                            IsDeleted = false,
                            Name = "User",
                            Status = true
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Label1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(5016),
                            Description = "Organic Veggies & Fruits Foods",
                            ImageUrl1 = "/WebT/img/hero-img-1.png",
                            ImageUrl2 = "/WebT/img/hero-img-2.jpg",
                            IsDeleted = false,
                            Label1 = "Fruites",
                            Label2 = "Vesitables",
                            Status = true,
                            Title = "100% Organic Foods",
                            Url1 = "#",
                            Url2 = "#"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialMedias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cls = "btn btn-outline-secondary me-2 btn-md-square rounded-circle",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(4983),
                            Icon = "fab fa-facebook-f",
                            IsDeleted = false,
                            Status = true,
                            Title = "Facebook",
                            Url = "http://www.facebook.com"
                        },
                        new
                        {
                            Id = 2,
                            Cls = "btn btn-outline-secondary me-2 btn-md-square rounded-circle",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(4985),
                            Icon = "fab fa-youtube",
                            IsDeleted = false,
                            Status = true,
                            Title = "Youtube",
                            Url = "http://www.youtube.com"
                        },
                        new
                        {
                            Id = 3,
                            Cls = "btn btn-outline-secondary me-2 btn-md-square rounded-circle",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(4987),
                            Icon = "fab fa-linkedin-in",
                            IsDeleted = false,
                            Status = true,
                            Title = "Linkedin",
                            Url = "http://www.linkedin.com"
                        },
                        new
                        {
                            Id = 4,
                            Cls = "btn btn-outline-secondary btn-md-square rounded-circle",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(4988),
                            Icon = "fab fa-twitter",
                            IsDeleted = false,
                            Status = true,
                            Title = "Twitter",
                            Url = "http://www.x.com"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3789),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Grapes"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3791),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Raspberries"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3792),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Apricots"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3793),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Banana"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3794),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Oranges"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3798),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Apple"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3799),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Patatoes"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3800),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Persely"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3801),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Tomato"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3803),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Brocoli"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3805),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Bell Papper"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(3806),
                            IsDeleted = false,
                            Status = true,
                            SubCategoryName = "Strawberry"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Lorem Ipsum is simply dummy text of the printing Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(4955),
                            ImageUrl = "/WebT/img/testimonial-1.jpg",
                            IsDeleted = false,
                            Name = "Şebnem Ferah",
                            Status = true,
                            Title = "Şef Aşçı"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Lorem Ipsum is simply dummy text of the printing Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(4959),
                            ImageUrl = "/WebT/img/testimonial-1.jpg",
                            IsDeleted = false,
                            Name = "Teoman Yakupoğlu",
                            Status = true,
                            Title = "Şef Aşçı"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ankara",
                            CreatedDate = new DateTime(2024, 5, 7, 1, 16, 42, 577, DateTimeKind.Local).AddTicks(4904),
                            Email = "admin@test.com",
                            FirstName = "Şebnem",
                            IsDeleted = false,
                            LastName = "Ferah",
                            Password = "CfDJ8Lhzc99II2tHnoigxoZuezO7kxnJ4PkrcExpd5rGLVfCvP3rMiEKIMjJCyUomsJHxxaY_7QLwAO9z5ys58_Rclll0J8S5Dy6qsnhOMNZedTaEB-UYE5jXpTst32f9m3egg",
                            Phone = "0850",
                            RoleId = 1,
                            Status = true,
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Basket", b =>
                {
                    b.HasOne("ShopECommerce.Entities.Concrete.MenuTable", "MenuTable")
                        .WithMany("Baskets")
                        .HasForeignKey("MenuTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopECommerce.Entities.Concrete.Product", "Product")
                        .WithMany("Baskets")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuTable");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.OrderDetail", b =>
                {
                    b.HasOne("ShopECommerce.Entities.Concrete.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopECommerce.Entities.Concrete.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Product", b =>
                {
                    b.HasOne("ShopECommerce.Entities.Concrete.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.SubCategory", b =>
                {
                    b.HasOne("ShopECommerce.Entities.Concrete.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.User", b =>
                {
                    b.HasOne("ShopECommerce.Entities.Concrete.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.MenuTable", b =>
                {
                    b.Navigation("Baskets");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Product", b =>
                {
                    b.Navigation("Baskets");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ShopECommerce.Entities.Concrete.SubCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
